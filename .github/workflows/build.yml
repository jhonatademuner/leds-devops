name: CI/CD Pipeline
on:
  push:
    branches:
      - main

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Project and Run Tests with Coverage
        run: mvn clean verify -Pcoverage -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/leds-devops:latest .
      - name: Publish image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/leds-devops:latest

  sonar:
    needs: build
    name: SonarQube Analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests and Generate Coverage Report
        run: mvn clean verify -Pcoverage -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=jhonatademuner_leds-devops \
            -Dsonar.organization=jhonata-demuner-org \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
  

  deploy:
    needs: build
    runs-on:
      - aws-ec2-leds-devops
    steps:
      - name: Pull image from Docker Hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/leds-devops:latest
      - name: Delete old container
        run: sudo docker rm -f leds-devops-container || true
      - name: Run Docker Container
        run: sudo docker run -d -p 8080:8080 --name leds-devops-container ${{ secrets.DOCKER_USERNAME }}/leds-devops:latest
